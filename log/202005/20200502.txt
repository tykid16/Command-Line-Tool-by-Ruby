＊時刻(Time)クラス
(5) 時刻要素を配列として取得する
現在時刻や時刻を指定してTimeクラスのオブジェクトを作成した後で年や月など時刻の各要素を配列として取得する方法を確認します。Timeクラスで用意されている「to_a」メソッドを使います。

配列変数 = Timeオブジェクト.to_a
Timeクラスのオブジェクトに対して「to_a」メソッドを実行すると時刻要素をそれぞれ要素とした配列を取得できます。配列に格納される時刻要素と順序は次の通りです。

フォーマット文字列	出力形式
sec	秒(整数で取得)
min	分(整数で取得)
hour	時(整数で取得)
mday	日(整数で取得)
mon	月(整数で取得)
year	年(整数で取得)
wday	曜日(整数で取得)
yday	年内通算日(整数で取得)
isdst	夏時間の有無(true or falseで取得)
zone	タイムゾーン(文字列で取得)
例えば次のように使用します。

t = Time.now
ary = t.to_a

(6) 起算時からの経過秒数を取得する
Timeクラスのオブジェクトは内部的には起算時である1970年1月1日午前0時からの経過秒数を保持しています。この値を必要に応じて年月日や時分秒などに換算して利用するのですが今回は経過秒数そのものを取得する方法を確認します。Timeクラスで用意されている「to_f」メソッドなどを使います。

変数 = Timeオブジェクト.to_f
変数 = Timeオブジェクト.to_i
変数 = Timeオブジェクト.tv_sec
「to_f」メソッドは起算時からの経過秒数を浮動小数点数で取得します。このメソッドの場合は1秒未満の値も取得できます。

「to_i」メソッド及び「tv_sec」メソッドの場合は起算時からの経過秒数を整数で取得します。このメソッドの場合は最小単位が秒となります。

例えば次のように使用します。

t = Time.now
ary = t.to_i
経過秒数からTimeクラスのオブジェクトを作成する
今まではTimeクラスのオブジェクトを作成する方法として現在時刻を取得するか年月日などを指定して作成していました。他の方法として経過秒数を指定してTimeクラスのオブジェクトを作成することが出来ます。Timeクラスで用意されている「at」メソッドを使います。

Time.at(time[, usec])
引数には経過秒数を表す整数又は浮動小数点数を指定します。

なお浮動小数点数でも指定できない細かい値は省略可能な2番目の引数で指定します。この場合は1番目の引数には整数の時刻を指定し、2番目の引数には整数の値を指定します。結果は「time + (usec/1000000)」が指定されたことになります。

例えば次のように使用します。

t = Time.at(6672736622)

(7) 時刻の加減算
 
Timeクラスのオブジェクトに対して加算や減算を行うことが出来ます。まずは秒単位での加算と減算を行います。

t = Time.now
t = t + 10
t = t - 8
Timeクラスのオブジェクトに対して「+」メソッドや「-」メソッドを使って数値を加算減算できます。数値の単位は秒です。上記の場合は10秒増加させた後で8秒減少させています。

時刻と時刻の差分
また2つのTimeクラスのオブジェクトの差を求めることが出来ます。

t1 = Time.now
t2 = t1 + 10
sabun = t2 - t1
Timeクラスのオブジェクトに対して「-」メソッドを使って他のTimeクラスのオブジェクトを減算すると、2つのTimeクラスのオブジェクトの差を取得出来ます。単位は秒です。

(8) 協定世界時との時差を取得する
協定世界時とローカルタイムとの時差を取得します。Timeクラスで用意されている「utc_offset」を使います。

jisa = Time.now.utc_offset
現在のタイムゾーンがローカルタイムに設定されている場合に協定世界時との時差を数値で取得できます。

「utc_offset」メソッドと同じ機能を持つメソッドとして「gmt_offset」メソッドと「gmtoff」メソッドがあります。

